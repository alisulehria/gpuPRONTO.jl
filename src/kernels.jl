# placeholder definitions for model kernels
# model-specific versions generated by codegen.jl from user-provided models
Q(α,μ,t,θ) = throw(ModelDefError(θ))
R(α,μ,t,θ) = throw(ModelDefError(θ))

Q!(out,α,μ,t,θ) = throw(ModelDefError(θ))
R!(out,α,μ,t,θ) = throw(ModelDefError(θ))

f(x,u,t,θ) = throw(ModelDefError(θ))
fx(x,u,t,θ) = throw(ModelDefError(θ))
fu(x,u,t,θ) = throw(ModelDefError(θ))
fxx(x,u,t,θ) = throw(ModelDefError(θ))
fxu(x,u,t,θ) = throw(ModelDefError(θ))
fuu(x,u,t,θ) = throw(ModelDefError(θ))

f!(out,x,u,t,θ) = throw(ModelDefError(θ))
fx!(out,x,u,t,θ) = throw(ModelDefError(θ))
fu!(out,x,u,t,θ) = throw(ModelDefError(θ))
fxx!(x,u,t,θ) = throw(ModelDefError(θ))
fxu!(x,u,t,θ) = throw(ModelDefError(θ))
fuu!(x,u,t,θ) = throw(ModelDefError(θ))

l(x,u,t,θ) = throw(ModelDefError(θ))
lx(x,u,t,θ) = throw(ModelDefError(θ))
lu(x,u,t,θ) = throw(ModelDefError(θ))
lxx(x,u,t,θ) = throw(ModelDefError(θ))
lxu(x,u,t,θ) = throw(ModelDefError(θ))
luu(x,u,t,θ) = throw(ModelDefError(θ))

l!(out, x,u,t,θ) = throw(ModelDefError(θ))
lx!(out,x,u,t,θ) = throw(ModelDefError(θ))
lu!(out,x,u,t,θ) = throw(ModelDefError(θ))
lxx!(x,u,t,θ) = throw(ModelDefError(θ))
lxu!(x,u,t,θ) = throw(ModelDefError(θ))
luu!(x,u,t,θ) = throw(ModelDefError(θ))

p(x,u,t,θ) = throw(ModelDefError(θ))
px(x,u,t,θ) = throw(ModelDefError(θ))
pxx(x,u,t,θ) = throw(ModelDefError(θ))

p!(out,x,u,t,θ) = throw(ModelDefError(θ))
px!(out,x,u,t,θ) = throw(ModelDefError(θ))
pxx!(out,x,u,t,θ) = throw(ModelDefError(θ))

Lxx(λ,x,u,t,θ) = throw(ModelDefError(θ))
Lxu(λ,x,u,t,θ) = throw(ModelDefError(θ))
Luu(λ,x,u,t,θ) = throw(ModelDefError(θ))

Lxx!(out,λ,x,u,t,θ) = throw(ModelDefError(θ))
Lxu!(out,λ,x,u,t,θ) = throw(ModelDefError(θ))
Luu!(out,λ,x,u,t,θ) = throw(ModelDefError(θ))




# kernels = return [Q, R, f, fx, fu, fxx, fxu, fuu, l, lx, lu, lxx, lxu, luu, p, px, pxx, Lxx, Lxu, Luu]
