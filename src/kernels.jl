# placeholder definitions for model kernels
# model-specific versions generated by codegen.jl from user-provided models
Q(θ,α,μ,t) = throw(ModelDefError(θ))
R(θ,α,μ,t) = throw(ModelDefError(θ))

Q!(out,θ,α,μ,t) = throw(ModelDefError(θ))
R!(out,θ,α,μ,t) = throw(ModelDefError(θ))

f(θ,x,u,t) = throw(ModelDefError(θ))
fx(θ,x,u,t) = throw(ModelDefError(θ))
fu(θ,x,u,t) = throw(ModelDefError(θ))
fxx(θ,x,u,t) = throw(ModelDefError(θ))
fxu(θ,x,u,t) = throw(ModelDefError(θ))
fuu(θ,x,u,t) = throw(ModelDefError(θ))

f!(out,θ,x,u,t) = throw(ModelDefError(θ))
fx!(out,θ,x,u,t) = throw(ModelDefError(θ))
fu!(out,θ,x,u,t) = throw(ModelDefError(θ))
fxx!(θ,x,u,t) = throw(ModelDefError(θ))
fxu!(θ,x,u,t) = throw(ModelDefError(θ))
fuu!(θ,x,u,t) = throw(ModelDefError(θ))

l(θ,x,u,t) = throw(ModelDefError(θ))
lx(θ,x,u,t) = throw(ModelDefError(θ))
lu(θ,x,u,t) = throw(ModelDefError(θ))
lxx(θ,x,u,t) = throw(ModelDefError(θ))
lxu(θ,x,u,t) = throw(ModelDefError(θ))
luu(θ,x,u,t) = throw(ModelDefError(θ))

l!(out,θ,x,u,t) = throw(ModelDefError(θ))
lx!(out,θ,x,u,t) = throw(ModelDefError(θ))
lu!(out,θ,x,u,t) = throw(ModelDefError(θ))
lxx!(θ,x,u,t) = throw(ModelDefError(θ))
lxu!(θ,x,u,t) = throw(ModelDefError(θ))
luu!(θ,x,u,t) = throw(ModelDefError(θ))

p(θ,x,u,t) = throw(ModelDefError(θ))
px(θ,x,u,t) = throw(ModelDefError(θ))
pxx(θ,x,u,t) = throw(ModelDefError(θ))

p!(out,θ,x,u,t) = throw(ModelDefError(θ))
px!(out,θ,x,u,t) = throw(ModelDefError(θ))
pxx!(out,θ,x,u,t) = throw(ModelDefError(θ))

Lxx(θ,λ,x,u,t) = throw(ModelDefError(θ))
Lxu(θ,λ,x,u,t) = throw(ModelDefError(θ))
Luu(θ,λ,x,u,t) = throw(ModelDefError(θ))

Lxx!(out,θ,λ,x,u,t) = throw(ModelDefError(θ))
Lxu!(out,θ,λ,x,u,t) = throw(ModelDefError(θ))
Luu!(out,θ,λ,x,u,t) = throw(ModelDefError(θ))




# kernels = return [Q, R, f, fx, fu, fxx, fxu, fuu, l, lx, lu, lxx, lxu, luu, p, px, pxx, Lxx, Lxu, Luu]
